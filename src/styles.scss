/* You can add global styles to this file, and also import other style files */
@import url("https://fonts.googleapis.com/css2?family=Comfortaa:wght@400;700&display=swap");
@import "./variables.scss";
@import "~angular-calendar/scss/angular-calendar.scss";

.main {
  width: 100%;
  grid-area: main;
  background-color: $bg-color;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding-top: 5rem;
}

* {
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body {
  margin: 0;
  font-family: "Comfortaa", sans-serif;
  padding-top: 5rem;
  display: grid;
  grid-template-rows: 5rem auto fit-content(8rem);
  grid-template-areas: "header" "main" "footer";
  padding-top: 0;
  height: 100vh;
}

body::-webkit-scrollbar {
  width: 0;
}

main {
  min-height: calc(100vh - 5rem);
  background-color: $bg-color;
}

ul {
  list-style: none;
}

a {
  text-decoration: none;
  color: black;
}

button:focus {
  outline: none;
}

.btn {
  font: inherit;
  font-weight: bold;
  border-radius: 25px;
  background: transparent;
  width: 50%;
  cursor: pointer;
  margin: 2rem;
  padding: 1rem;
}

.backdrop {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 100;
  width: 100vw;
  height: 100vh;
  background: #00000080;
  display: none;
  opacity: 0;
  transition: all 0.2s linear;
}

.open {
  display: block !important;
  opacity: 1 !important;
  transform: translateX(0) !important;
}

//Forms

.modal {
  position: fixed;
  top: 25%;
  left: 25%;
  width: 55%;
  border-radius: 15px;
  background-color: $bg-color;
  color: $primary-color;
  border: 3px solid $secondary-color;
  padding: 0.5rem;
  z-index: 201;

  form {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
}

.btn-add {
  color: $primary-color;
  background-color: $secondary-color;
  border: none;
}

.form__control {
  position: relative;
  width: 80%;
  padding: 0.5rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.form-error {
  color: red;
  border-bottom-color: red !important;
}

.form__field {
  font-family: inherit;
  width: 100%;
  border: 0;
  border-bottom: 2px solid gray;
  outline: 0;
  font-size: 1.3rem;
  color: white;
  padding: 7px 0;
  background: transparent;
  transition: border-color 0.2s;

  &::placeholder {
    color: transparent;
  }

  &:placeholder-shown ~ .form__label {
    font-size: 1.3rem;
    cursor: text;
    top: 20px;
  }
}

.form__label {
  position: absolute;
  top: 0;
  display: block;
  transition: 0.2s;
  font-size: 1rem;
  color: gray;
}

.form__field:focus {
  ~ .form__label {
    position: absolute;
    top: 0;
    display: block;
    transition: 0.2s;
    font-size: 1rem;
    color: $primary-color;
    font-weight: 700;
  }
  padding-bottom: 6px;
  font-weight: 700;
  border-width: 3px;
  border-image: linear-gradient(to right, $primary-color, $tertiary-color);
  border-image-slice: 1;
}
/* reset input */
.form__field {
  &:required,
  &:invalid {
    box-shadow: none;
  }
}

.divider {
  width: 75%;
  border-top: 2px solid $primary-color;
}

// Custom Select
.rule {
  margin: 10px 0;
  border: none;
  height: 1.5px;
  background-image: linear-gradient(to left, #f0f0f0, #c9bbae, #f0f0f0);
}

/* ===== Select Box ===== */
.sel {
  font-size: 1rem;
  display: inline-block;
  width: 80%;
  background-color: transparent;
  position: relative;
  cursor: pointer;
  z-index: 3;
  border-bottom: 4px solid #0000004d;
  align-self: flex-start;
}

.sel::before {
  position: absolute;
  content: "\f063";
  font-family: "FontAwesome";
  font-size: 2em;
  color: #fff;
  right: 20px;
  top: calc(50% - 0.5em);
}

.sel.active::before {
  transform: rotateX(-180deg);
}

.sel__placeholder {
  display: block;
  font-size: 1.5em;
  color: #838e95;
  padding: 0.2em 0.5em;
  text-align: left;
  pointer-events: none;
  user-select: none;
  visibility: visible;
}

.sel.active .sel__placeholder {
  visibility: hidden;
}

.sel__placeholder::before {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  padding: 0.2em 0.5em;
  content: attr(data-placeholder);
  visibility: hidden;
}

.sel.active .sel__placeholder::before {
  visibility: visible;
}

.sel__box {
  position: absolute;
  top: calc(100% + 4px);
  left: -4px;
  display: none;
  list-style-type: none;
  text-align: left;
  font-size: 1em;
  background-color: #fff;
  width: calc(100% + 8px);
  box-sizing: border-box;
}

.sel.active .sel__box {
  display: block;
  animation: fadeInUp 500ms;
}

.sel__box__options {
  display: list-item;
  font-family: "Quicksand";
  font-size: 1.5em;
  color: #838e95;
  padding: 0.5em 1em;
  user-select: none;
}

.sel__box__options::after {
  content: "\f00c";
  font-family: "FontAwesome";
  font-size: 0.5em;
  margin-left: 5px;
  display: none;
}

.sel__box__options.selected::after {
  display: inline;
}

.sel__box__options:hover {
  background-color: #ebedef;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translate3d(0, 20px, 0);
  }

  to {
    opacity: 1;
    transform: none;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

//--------Custom Checkbox --------

.checkbox__spec {
  display: flex;
  width: 90%;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
}

.spec__label {
  font-size: 1.1rem;
  color: white;
  max-width: 50%;
}

.checkbox {
  --background: #fff;
  --border: #d1d6ee;
  --border-hover: #bbc1e1;
  --border-active: #11998e;
  --tick: #fff;
  position: relative;
  input,
  svg {
    width: 21px;
    height: 21px;
    display: block;
  }
  input {
    -webkit-appearance: none;
    -moz-appearance: none;
    position: relative;
    outline: none;
    background: var(--background);
    border: none;
    margin: 0;
    padding: 0;
    cursor: pointer;
    border-radius: 4px;
    transition: box-shadow 0.3s;
    box-shadow: inset 0 0 0 var(--s, 1px) var(--b, var(--border));
    &:hover {
      --s: 2px;
      --b: var(--border-hover);
    }
    &:checked {
      --b: var(--border-active);
    }
  }
  svg {
    pointer-events: none;
    fill: none;
    stroke-width: 2px;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke: var(--stroke, var(--border-active));
    position: absolute;
    top: 0;
    left: 0;
    width: 21px;
    height: 21px;
    transform: scale(var(--scale, 1)) translateZ(0);
  }
  &.path {
    input {
      &:checked {
        --s: 2px;
        transition-delay: 0.4s;
        & + svg {
          --a: 16.1 86.12;
          --o: 102.22;
        }
      }
    }
    svg {
      stroke-dasharray: var(--a, 86.12);
      stroke-dashoffset: var(--o, 86.12);
      transition: stroke-dasharray 0.6s, stroke-dashoffset 0.6s;
    }
  }
  &.bounce {
    --stroke: var(--tick);
    input {
      &:checked {
        --s: 11px;
        & + svg {
          animation: bounce 0.4s linear forwards 0.2s;
        }
      }
    }
    svg {
      --scale: 0;
    }
  }
}

@keyframes bounce {
  50% {
    transform: scale(1.2);
  }
  75% {
    transform: scale(0.9);
  }
  100% {
    transform: scale(1);
  }
}

@media (min-width: 50rem) {
  .main {
    flex-direction: row;
    height: 100vh;
  }
}

@media (min-width: 80rem) {
  .main {
    flex-direction: row;
  }
}

.dark-theme {
  // First define some global color variables for your app, these are just for the demo, they can be anything you like
  $bg-dark-primary: #1f262d;
  $bg-dark-secondary: #394046;
  $bg-active: #2c343a;
  $text-color: #d5d6d7;
  $border-color: rgba(0, 0, 0, 0.6);

  // Call the calendar mixin with a sass color map of your theme. Every property is optional.
  // For a list of all variables and how they are used,
  // see https://github.com/mattlewis92/angular-calendar/tree/master/projects/angular-calendar/src/variables.scss
  @include cal-theme(
    (
      bg-primary: $bg-dark-primary,
      bg-secondary: $bg-dark-secondary,
      weekend-color: indianred,
      bg-active: $bg-active,
      border-color: $border-color,
      gray: $bg-dark-secondary,
      today-bg: $bg-dark-secondary,
      event-color-primary: $bg-dark-secondary,
    )
  );

  // How to override a non themable property, this was copied from chrome -> inspect element -> styles panel
  .cal-month-view .cal-day-cell.cal-out-month .cal-day-number {
    opacity: 0.15;
  }

  // Everything else below is just themes the demo, it's probably not relevant to your app
  background-color: $bg-dark-primary;
  color: $text-color;

  .card {
    border-color: $border-color;
  }

  .card-header {
    background-color: $bg-dark-secondary;
  }

  .card-body {
    background-color: $bg-dark-primary;
  }

  .nav-tabs {
    border-bottom-color: $border-color;
  }

  .nav-tabs .nav-link.active {
    background-color: $bg-dark-primary;
    color: $text-color;
    border-color: $border-color;
  }

  .nav-tabs .nav-link:hover,
  .nav-tabs .nav-link:focus {
    border-color: $border-color;
  }
}
